version: '3.7'

services:
  db:
    image: postgres:12-alpine
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - live

  redis:
    image: 'redis:alpine'
    hostname: redis
    networks:
      - live

  app:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: app
    stdin_open: true
    expose:
      - '8000'
    volumes:
      - .env:/app/.env
    command: bash -c "python manage.py migrate && gunicorn myproject.wsgi:application -b 0.0.0.0:8000"
    depends_on:
      - redis
      - db
    networks:
      - live

  nginx:
    image: nginx
    hostname: nginx
    ports:
      - '82:8000'
    volumes:
      - ./config/nginx:/etc/nginx/conf.d
    depends_on:
      - app
    networks:
      - live

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: "celery -A myproject worker -l info --queue=fila1"
    depends_on:
      - app
      - redis
      - db
    restart: on-failure
    networks:
      - live

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '5555:5555'
    command: "celery -A myproject flower --address=0.0.0.0"
    depends_on:
      - celery
    networks:
      - live

volumes:
  db-data:

networks:
  live: